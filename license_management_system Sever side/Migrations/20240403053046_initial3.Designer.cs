// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using license_management_system_Sever_side.Data;

#nullable disable

namespace license_management_system_Sever_side.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240403053046_initial3")]
    partial class initial3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ModulesRequestKey", b =>
                {
                    b.Property<int>("ModulesId")
                        .HasColumnType("int");

                    b.Property<int>("RequestKeysRequestID")
                        .HasColumnType("int");

                    b.HasKey("ModulesId", "RequestKeysRequestID");

                    b.HasIndex("RequestKeysRequestID");

                    b.ToTable("ModulesRequestKeys", (string)null);
                });

            modelBuilder.Entity("license_management_system_Sever_side.Models.Entities.EndClient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Industry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("name");

                    b.Property<int>("PartnerId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("phone_number");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PartnerId");

                    b.ToTable("EndClients");
                });

            modelBuilder.Entity("license_management_system_Sever_side.Models.Entities.LicenseKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("key_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ActivationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("activation_date");

                    b.Property<DateTime>("DeactivatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("deactivated_Date");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Key");

                    b.HasKey("Id");

                    b.ToTable("LicenseKeys");
                });

            modelBuilder.Entity("license_management_system_Sever_side.Models.Entities.Modules", b =>
                {
                    b.Property<int>("ModulesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModulesId"));

                    b.Property<DateTime>("CreatedData")
                        .HasColumnType("datetime2");

                    b.Property<string>("Features")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modulename")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("name");

                    b.HasKey("ModulesId");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("license_management_system_Sever_side.Models.Entities.RequestKey", b =>
                {
                    b.Property<int>("RequestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("request_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestID"));

                    b.Property<string>("CommentFinaceMgt")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("comment_finace_mgt");

                    b.Property<string>("CommentPartnerMgt")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("comment_partner_mgt");

                    b.Property<int>("EndClientId")
                        .HasColumnType("int");

                    b.Property<int>("FinaceManagerId")
                        .HasColumnType("int");

                    b.Property<int>("LicenseKeyId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfDays")
                        .HasColumnType("int");

                    b.Property<int>("PartnerId")
                        .HasColumnType("int");

                    b.Property<int>("PartnerManagerID")
                        .HasColumnType("int");

                    b.Property<int?>("isFinanceApproval")
                        .HasColumnType("int")
                        .HasColumnName("status_finance_mgt");

                    b.Property<int?>("isPartnerApproval")
                        .HasColumnType("int")
                        .HasColumnName("status_Partner_mgt");

                    b.HasKey("RequestID");

                    b.HasIndex("EndClientId");

                    b.HasIndex("FinaceManagerId");

                    b.HasIndex("LicenseKeyId");

                    b.HasIndex("PartnerId");

                    b.HasIndex("PartnerManagerID");

                    b.ToTable("RequestKeys");
                });

            modelBuilder.Entity("license_management_system_Sever_side.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("license_management_system_Sever_side.Models.Entities.FinaceManager", b =>
                {
                    b.HasBaseType("license_management_system_Sever_side.Models.Entities.User");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.ToTable("Users", t =>
                        {
                            t.Property("UserRole")
                                .HasColumnName("FinaceManager_UserRole");
                        });

                    b.HasDiscriminator().HasValue("FinaceManager");
                });

            modelBuilder.Entity("license_management_system_Sever_side.Models.Entities.Partner", b =>
                {
                    b.HasBaseType("license_management_system_Sever_side.Models.Entities.User");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.ToTable("Users", t =>
                        {
                            t.Property("UserRole")
                                .HasColumnName("Partner_UserRole");
                        });

                    b.HasDiscriminator().HasValue("Partner");
                });

            modelBuilder.Entity("license_management_system_Sever_side.Models.Entities.PartnerManager", b =>
                {
                    b.HasBaseType("license_management_system_Sever_side.Models.Entities.User");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("PartnerManager");
                });

            modelBuilder.Entity("ModulesRequestKey", b =>
                {
                    b.HasOne("license_management_system_Sever_side.Models.Entities.Modules", null)
                        .WithMany()
                        .HasForeignKey("ModulesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("license_management_system_Sever_side.Models.Entities.RequestKey", null)
                        .WithMany()
                        .HasForeignKey("RequestKeysRequestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("license_management_system_Sever_side.Models.Entities.EndClient", b =>
                {
                    b.HasOne("license_management_system_Sever_side.Models.Entities.Partner", "Partner")
                        .WithMany("EndClients")
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("license_management_system_Sever_side.Models.Entities.RequestKey", b =>
                {
                    b.HasOne("license_management_system_Sever_side.Models.Entities.EndClient", "EndClient")
                        .WithMany("RequestKeys")
                        .HasForeignKey("EndClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("license_management_system_Sever_side.Models.Entities.FinaceManager", "FinaceManager")
                        .WithMany("RequestKeys")
                        .HasForeignKey("FinaceManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("license_management_system_Sever_side.Models.Entities.LicenseKey", "LicenseKey")
                        .WithMany("RequestKeys")
                        .HasForeignKey("LicenseKeyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("license_management_system_Sever_side.Models.Entities.Partner", "Partner")
                        .WithMany("RequestKeys")
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("license_management_system_Sever_side.Models.Entities.PartnerManager", "PartnerManager")
                        .WithMany("RequestKeys")
                        .HasForeignKey("PartnerManagerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EndClient");

                    b.Navigation("FinaceManager");

                    b.Navigation("LicenseKey");

                    b.Navigation("Partner");

                    b.Navigation("PartnerManager");
                });

            modelBuilder.Entity("license_management_system_Sever_side.Models.Entities.EndClient", b =>
                {
                    b.Navigation("RequestKeys");
                });

            modelBuilder.Entity("license_management_system_Sever_side.Models.Entities.LicenseKey", b =>
                {
                    b.Navigation("RequestKeys");
                });

            modelBuilder.Entity("license_management_system_Sever_side.Models.Entities.FinaceManager", b =>
                {
                    b.Navigation("RequestKeys");
                });

            modelBuilder.Entity("license_management_system_Sever_side.Models.Entities.Partner", b =>
                {
                    b.Navigation("EndClients");

                    b.Navigation("RequestKeys");
                });

            modelBuilder.Entity("license_management_system_Sever_side.Models.Entities.PartnerManager", b =>
                {
                    b.Navigation("RequestKeys");
                });
#pragma warning restore 612, 618
        }
    }
}
